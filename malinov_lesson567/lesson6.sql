use shop;
# ЗАДАНИЕ 1: ПОДГОТОВКА
select * from sample.users;
# +----+------+-------------+------------+------------+
# | id | name | birthday_at | created_at | updated_at |
# +----+------+-------------+------------+------------+

# ЗАДАНИЕ 1: В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных.
# Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.
start transaction;
insert into sample.users (select * from shop.users where id = 1);
delete from shop.users where id = 1;
COMMIT ;

select * from shop.users;
# +----+-----------+-------------+---------------------+---------------------+
# | id | name      | birthday_at | created_at          | updated_at          |
# +----+-----------+-------------+---------------------+---------------------+
# | 2  | Наталья   | 1984-11-12  | 2019-06-23 12:01:26 | 2019-06-23 12:01:26 |
# | 3  | Александр | 1985-05-20  | 2019-06-23 12:01:26 | 2019-06-23 12:01:26 |
# | 4  | Сергей    | 1988-02-14  | 2019-06-23 12:01:26 | 2019-06-23 12:01:26 |
# | 5  | Иван      | 1998-01-12  | 2019-06-23 12:01:26 | 2019-06-23 12:01:26 |
# | 6  | Мария     | 1992-08-29  | 2019-06-23 12:01:26 | 2019-06-23 12:01:26 |
# +----+-----------+-------------+---------------------+---------------------+
select * from sample.users;
# +----+----------+-------------+---------------------+---------------------+
# | id | name     | birthday_at | created_at          | updated_at          |
# +----+----------+-------------+---------------------+---------------------+
# | 1  | Геннадий | 1990-10-05  | 2019-06-23 12:01:26 | 2019-06-23 12:01:26 |
# +----+----------+-------------+---------------------+---------------------+


# ЗАДАНИЕ 2: Создайте представление, которое выводит название name товарной позиции из таблицы products
# и соответствующее название каталога name из таблицы catalogs.
create VIEW product_cat as (
    select p.id as p_id, p.name product_name, c.id as c_id, c.name catalog_name
    from products p
             left join catalogs c on p.catalog_id = c.id
);

select * from product_cat;
# +------+-------------------------+------+-------------------+
# | p_id | product_name            | c_id | catalog_name      |
# +------+-------------------------+------+-------------------+
# | 1    | Intel Core i3-8100      | 1    | Процессоры        |
# | 2    | Intel Core i5-7400      | 1    | Процессоры        |
# | 3    | AMD FX-8320E            | 1    | Процессоры        |
# | 4    | AMD FX-8320             | 1    | Процессоры        |
# | 5    | ASUS ROG MAXIMUS X HERO | 2    | Материнские платы |
# | 6    | Gigabyte H310M S2H      | 2    | Материнские платы |
# | 7    | MSI B250M GAMING PRO    | 2    | Материнские платы |
# +------+-------------------------+------+-------------------+


# ЗАДАНИЕ 2* 2)
# Пусть имеется любая таблица с календарным полем created_at. Создайте запрос, который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.
drop table if exists tbl;
create table tbl
(
    id         serial,
    cal        date COMMENT 'some column',
    created_at datetime default NOW()
);

insert into tbl
values (default, '2018-07-15', '2018-07-15 12:00'),
       (default, '2018-07-16', '2018-07-16 12:00'),
       (default, '2018-07-17', '2018-07-17 12:00'),
       (default, '2018-07-18', '2018-07-18 12:00'),
       (default, '2018-08-01', '2018-08-01 12:00'),
       (default, '2018-08-04', '2018-08-04 12:00'),
       (default, '2018-08-16', '2018-08-16 12:00'),
       (default, '2018-08-17', '2018-08-17 12:00');

select *
from tbl;
#     +----+------------+---------------------+
#     | id | cal        | created_at          |
#     +----+------------+---------------------+
#     | 1  | 2018-07-15 | 2018-07-15 12:00:00 |
#     | 2  | 2018-07-16 | 2018-07-16 12:00:00 |
#     | 3  | 2018-07-17 | 2018-07-17 12:00:00 |
#     | 4  | 2018-07-18 | 2018-07-18 12:00:00 |
#     | 5  | 2018-08-01 | 2018-08-01 12:00:00 |
#     | 6  | 2018-08-04 | 2018-08-04 12:00:00 |
#     | 7  | 2018-08-16 | 2018-08-16 12:00:00 |
#     | 8  | 2018-08-17 | 2018-08-17 12:00:00 |
#     +----+------------+---------------------+

DELETE t1
FROM tbl t1
         LEFT JOIN
     (
         SELECT id
         FROM tbl
         ORDER BY created_at DESC
         LIMIT 5
     ) t2
     ON t1.id = t2.id
WHERE t2.id IS NULL;

select *
from tbl;
# +----+------------+---------------------+
# | id | cal        | created_at          |
# +----+------------+---------------------+
# | 4  | 2018-07-18 | 2018-07-18 12:00:00 |
# | 5  | 2018-08-01 | 2018-08-01 12:00:00 |
# | 6  | 2018-08-04 | 2018-08-04 12:00:00 |
# | 7  | 2018-08-16 | 2018-08-16 12:00:00 |
# | 8  | 2018-08-17 | 2018-08-17 12:00:00 |
# +----+------------+---------------------+
